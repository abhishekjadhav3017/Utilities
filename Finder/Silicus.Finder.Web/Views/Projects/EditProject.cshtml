@model Silicus.Finder.Web.ViewModel.ProjectEditViewModel
@using Kendo.Mvc.UI;

@{
    ViewBag.Title = "Edit Project";
    var employees = Html.Partial("~/Views/Projects/_EditEmployees.cshtml", Model.Employees, new ViewDataDictionary { { "id", Model.ProjectId }, { "projectName", Model.ProjectName } });
    var skills = Html.Partial("~/Views/Projects/_EditSkillSets.cshtml", Model.SkillSets, new ViewDataDictionary { { "id", Model.ProjectId } });
}
<link href="~/Content/css/FinderStyle.css" rel="stylesheet" />

@using (Html.BeginForm())
{
    <br />
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
         @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="container-fluid">

            <div class="row">

                <div class="col-lg-6 col-md-6 col-sm-6 col-xs-6">

                    @Html.HiddenFor(model => model.ProjectId, new { id = "ProjectId" })

                    <div class="form-group">
                        @Html.LabelFor(model => model.ProjectCode, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.ProjectCode, new { htmlAttributes = new { @class = "form-control",  id = "ProjectCode" } })
                            @Html.ValidationMessageFor(model => model.ProjectCode, "", new { @class = "text-danger" })
                            <font color="red"> <div>@ViewBag.message</div> </font>
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.ProjectName, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.ProjectName, new { htmlAttributes = new { @class = "form-control", id = "ProjectName" } })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.ProjectType, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-6">
                            @Html.EnumDropDownListFor(model => model.ProjectType, "Select", new { @class = "form-control", @style = "width: 100%;" })
                            @Html.ValidationMessageFor(model => model.ProjectType, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    @*@Html.HiddenFor(model => model.Status)*@

                    <div class="form-group">
                        @Html.LabelFor(model => model.EngagementType, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-6">
                            @Html.EnumDropDownListFor(model => model.EngagementType, "Select", new { @class = "form-control", @style = "width: 100%;" })
                            @Html.ValidationMessageFor(model => model.EngagementType, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-6">
                            @Html.EnumDropDownListFor(model => model.Status, "Select", new { @class = "form-control", @style = "width: 100%;",  id = "status" })
                            @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-6">
                            @Html.TextAreaFor(model => model.Description, 5, 0, new { @class = "form-control", style = "width: 100%;" })
                            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                        </div>
                    </div>

                </div>

                <div class="col-lg-6 col-md-6 col-sm-6 col-xs-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.StartDate, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.StartDate, new { htmlAttributes = new { @class = "form-control", id = "startDate" } })
                            @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger", @id = "errorMessageStartDate" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.ExpectedEndDate, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.ExpectedEndDate, new { htmlAttributes = new { @class = "form-control", id = "expectedEndDate" } })
                            @Html.ValidationMessageFor(model => model.ExpectedEndDate, "", new { @class = "text-danger", @id = "errorMessageExpectedEndDate" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.ActualEndDate, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.ActualEndDate, new { htmlAttributes = new { @class = "form-control", id = "actualEndDate" } })
                            @Html.ValidationMessageFor(model => model.ActualEndDate, "", new { @class = "text-danger", @id = "errorMessageActualEndDate" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.Label("Engagement Manager", htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-6">
                            @Html.DropDownListFor(model => model.EngagementManagerId, (SelectList)ViewBag.EngManager, new { @class = "form-control", @style = "width: 100%;" })
                            @Html.ValidationMessageFor(model => model.EngagementManagerId, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.Label("Project Manager", htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-6">
                            @Html.DropDownListFor(model => model.ProjectManagerId, (SelectList)ViewBag.projManager, new { @class = "form-control", @style = "width: 100%;" })
                            @Html.ValidationMessageFor(model => model.ProjectManagerId, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.AdditionalNotes, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-6">
                            @Html.TextAreaFor(model => model.AdditionalNotes,5, 0, new { @class = "form-control", @style = "width: 100%;" })
                            @Html.ValidationMessageFor(model => model.AdditionalNotes, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

            </div>

            <div class="row">
                <div class="form-group">
                    <div class="col-md-offset-5 col-md-6">
                        <input type="submit" value="Update" id="CreateEditProjectButton" class="btn btn-default" />
                        @Html.ActionLink("Back To List", "GetProjects", "Projects", null, new { @class = "btn btn-default" })
                    </div>
                </div>
            </div>

        </div>

        <div class="fluid mt20">
            <div class="kendogrid">
                @(Html.Kendo().TabStrip()
                .Name("Tabs")
                .Items(tabstrip =>
                    {
                        tabstrip.Add().Text("Skills")
                            .Selected(true)
                            .Content(skills.ToString());

                        tabstrip.Add().Text("Employees")
                                    .Content(employees.ToString());
                    })
                )
            </div>
        </div>

    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<script src="~/Content/js/ProjectStatusDateValidation.js"></script>

<script>

    $(window).load(function () {
        $('#moduleHeaderTitleOnDashBoardImage').text("Edit Project");
    });
</script>